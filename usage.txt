=========================
サーバログ故障出力ツール
server_ping_check_4
使用方法
=========================

１．プログラムの概要

本プログラムはコマンドライン上で動作するサーバログ故障出力ツールです。


２．プログラムの動作環境

プログラムの動作には事前にpython3をインストールする必要があります。


３．プログラムの起動方法

プログラムはコマンドライン上で起動します。

C:\python server_ping_check_4.py_[path]_[limit]_[ping]_[count]_[mode]
* _ は 半角空白

[path]:
調査するログファイルのパスを入力する

[limit]:
サーバがlimit回以上タイムアウトした場合に、故障として状況を出力する。
正の整数値で指定する。特に指定が無い場合は0を入力する。

[ping]:
既定のping以上の場合、過負荷状況として出力する
正の整数値で指定する。特に指定が無い場合は0を入力する。

[count]:
直近のcount回の平均がping以上の場合のみ過負荷状況として出力する。
正の整数値で指定する。特に指定が無い場合は1を入力する。

[mode]:
各サブネット毎にネットワークの故障期間を出力する。
使用する場合は network と入力する。特に指定が無い場合は適当な文字を入力する。

使用例:
ログファイル logfile.txt について、サーバーのタイムアウトが3回以上、また、4回平均でpingが100以上の場合の過負荷を、サーバごとに出力する場合を指定するならば、以下の通りである。
C:\python server_ping_check_4.py ./logfile.txt 3 100 4 0


４．ログファイルの仕様

ログファイルはテキストファイル形式(.txt)を使用する。

1行ごとに
[日時],[IPアドレス],[ping]
の形式で記述する。

日時の形式は以下の通りである。
yyyymmddhhmmss (y:年,m:月,d:日,h:時,m:分,s:秒)

IPアドレスの形式は以下の通りである。
IPアドレス/サブネットマスク (例:192.168.1.1/20)

pingは正の整数値、もしくは、タイムアウトの場合はハイフン( - )で指定する。

例:20221120231324,192.168.1.1/20,-


